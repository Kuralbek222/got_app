{"ast":null,"code":"var _jsxFileName = \"/root/React/react-gotapp/src/components/itemList/itemList.js\",\n    _this = this;\n\nimport React, { useState, useEffect } from 'react';\nimport './itemList.css';\nimport Spinner from '../spinner'; // import { arrayOf } from 'prop-types';\n\nfunction ItemList(_ref) {\n  var onItemSelected = _ref.onItemSelected,\n      renderItem = _ref.renderItem,\n      data = _ref.data;\n\n  function renderItems(arr) {\n    return arr.map(function (item, i) {\n      var id = item.id;\n      var label = renderItem(item);\n      return React.createElement(\"li\", {\n        key: id,\n        className: \"list-group-item\",\n        onClick: function onClick() {\n          return onItemSelected(id, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, label);\n    });\n  }\n\n  var items = renderItems(data);\n  return React.createElement(\"ul\", {\n    className: \"item-list list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, items);\n}\n\nvar withData = function withData(View) {\n  var getData = _this.props.getData;\n\n  var _useState = useState([]),\n      data = _useState.data,\n      Updatalist = _useState.Updatalist;\n\n  useEffect(function () {\n    getData().then(function (data) {\n      Updatalist(data);\n    });\n  });\n\n  if (!data) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(View, Object.assign({}, _this.props, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default withData(ItemList);","map":{"version":3,"sources":["/root/React/react-gotapp/src/components/itemList/itemList.js"],"names":["React","useState","useEffect","Spinner","ItemList","onItemSelected","renderItem","data","renderItems","arr","map","item","i","id","label","items","withData","View","getData","props","Updatalist","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CACA;;AACC,SAASC,QAAT,OAAqD;AAAA,MAAjCC,cAAiC,QAAjCA,cAAiC;AAAA,MAAlBC,UAAkB,QAAlBA,UAAkB;AAAA,MAAPC,IAAO,QAAPA,IAAO;;AAClD,WAASC,WAAT,CAAqBC,GAArB,EAA0B;AACtB,WAAOA,GAAG,CAACC,GAAJ,CAAQ,UAACC,IAAD,EAAMC,CAAN,EAAY;AAAA,UAChBC,EADgB,GACVF,IADU,CAChBE,EADgB;AAEvB,UAAMC,KAAK,GAAGR,UAAU,CAACK,IAAD,CAAxB;AACA,aACA;AAAK,QAAA,GAAG,EAAEE,EAAV;AAAe,QAAA,SAAS,EAAC,iBAAzB;AAA2C,QAAA,OAAO,EAAE;AAAA,iBAAKR,cAAc,CAACQ,EAAD,EAAIF,IAAJ,CAAnB;AAAA,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACSG,KADT,CADA;AAKH,KARM,CAAP;AASH;;AACG,MAAMC,KAAK,GAAGP,WAAW,CAACD,IAAD,CAAzB;AACA,SACI;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,KADL,CADJ;AAKP;;AACD,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAQ;AAAA,MACTC,OADS,GACG,KAAI,CAACC,KADR,CACTD,OADS;;AAAA,kBAEWjB,QAAQ,CAAC,EAAD,CAFnB;AAAA,MAEVM,IAFU,aAEVA,IAFU;AAAA,MAEJa,UAFI,aAEJA,UAFI;;AAGjBlB,EAAAA,SAAS,CAAC,YAAI;AACdgB,IAAAA,OAAO,GACNG,IADD,CACM,UAACd,IAAD,EAAU;AACfa,MAAAA,UAAU,CAACb,IAAD,CAAV;AACI,KAHL;AAIC,GALQ,CAAT;;AAQI,MAAI,CAACA,IAAL,EAAW;AACP,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SAAO,oBAAC,IAAD,oBAAU,KAAI,CAACY,KAAf;AAAsB,IAAA,IAAI,EAAEZ,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AAEH,CAjBT;;AAkBA,eAAeS,QAAQ,CAACZ,QAAD,CAAvB","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport './itemList.css';\nimport Spinner from '../spinner'\n// import { arrayOf } from 'prop-types';\n function ItemList ({onItemSelected,renderItem,data}) {\n    function renderItems(arr) {\n        return arr.map((item,i) => {\n            const {id} = item\n            const label = renderItem(item)\n            return (\n            <li  key={id}  className=\"list-group-item\" onClick={() =>onItemSelected(id,item) } >\n                    {label}\n                </li>\n            )\n        })\n    }\n        const items = renderItems(data)\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n}   \nconst withData = (View)=>{\n        const { getData } = this.props\n        const {data, Updatalist } = useState([])\n        useEffect(()=>{\n        getData()\n        .then((data) => {\n         Updatalist(data)\n            })\n        })\n        \n   \n            if (!data) {\n                return <Spinner />\n            }\n            \n            return <View {...this.props} data={data}/>\n\n        }\nexport default withData(ItemList)"]},"metadata":{},"sourceType":"module"}