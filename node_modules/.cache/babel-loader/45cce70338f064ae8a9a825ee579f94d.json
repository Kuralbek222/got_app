{"ast":null,"code":"import _classCallCheck from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/React/react-gotapp/src/components/itemList/itemList.js\";\nimport React, { Component } from 'react';\nimport './itemList.css';\nimport Spinner from '../spinner'; // import { arrayOf } from 'prop-types';\n\nfunction ItemList(_ref) {\n  var onItemSelected = _ref.onItemSelected,\n      renderItem = _ref.renderItem,\n      data = _ref.data;\n\n  function renderItems(arr) {\n    return arr.map(function (item, i) {\n      var id = item.id;\n      var label = renderItem(item);\n      return React.createElement(\"li\", {\n        key: id,\n        className: \"list-group-item\",\n        onClick: function onClick() {\n          return onItemSelected(id, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, label);\n    });\n  }\n\n  var items = renderItems(data);\n  return React.createElement(\"ul\", {\n    className: \"item-list list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, items);\n}\n\nvar withData = function withData(View) {\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(_class2, _Component);\n\n      function _class2() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        _classCallCheck(this, _class2);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_class2)).call.apply(_getPrototypeOf2, [this].concat(args)));\n        _this.state = {\n          data: null\n        };\n        return _this;\n      }\n\n      _createClass(_class2, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          console.log(this.props);\n          var getData = this.props.getData;\n          getData().then(function (data) {\n            _this2.setState({\n              data: data\n            });\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var data = this.state.data;\n\n          if (!data) {\n            return React.createElement(Spinner, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            });\n          }\n\n          return React.createElement(View, Object.assign({}, this.props, {\n            data: data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }));\n        }\n      }]);\n\n      return _class2;\n    }(Component)\n  );\n};\n\nexport default withData(ItemList);","map":{"version":3,"sources":["/root/React/react-gotapp/src/components/itemList/itemList.js"],"names":["React","Component","Spinner","ItemList","onItemSelected","renderItem","data","renderItems","arr","map","item","i","id","label","items","withData","View","state","console","log","props","getData","then","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CACA;;AACC,SAASC,QAAT,OAAqD;AAAA,MAAjCC,cAAiC,QAAjCA,cAAiC;AAAA,MAAlBC,UAAkB,QAAlBA,UAAkB;AAAA,MAAPC,IAAO,QAAPA,IAAO;;AAClD,WAASC,WAAT,CAAqBC,GAArB,EAA0B;AACtB,WAAOA,GAAG,CAACC,GAAJ,CAAQ,UAACC,IAAD,EAAMC,CAAN,EAAY;AAAA,UAChBC,EADgB,GACVF,IADU,CAChBE,EADgB;AAEvB,UAAMC,KAAK,GAAGR,UAAU,CAACK,IAAD,CAAxB;AACA,aACA;AAAK,QAAA,GAAG,EAAEE,EAAV;AAAe,QAAA,SAAS,EAAC,iBAAzB;AAA2C,QAAA,OAAO,EAAE;AAAA,iBAAKR,cAAc,CAACQ,EAAD,EAAIF,IAAJ,CAAnB;AAAA,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACSG,KADT,CADA;AAKH,KARM,CAAP;AASH;;AACG,MAAMC,KAAK,GAAGP,WAAW,CAACD,IAAD,CAAzB;AACA,SACI;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,KADL,CADJ;AAKP;;AACD,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAQ;AACrB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,cACIC,KADJ,GACY;AACJX,UAAAA,IAAI,EAAE;AADF,SADZ;AAAA;AAAA;;AAAA;AAAA;AAAA,4CAIwB;AAAA;;AAChBY,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AADgB,cAERC,OAFQ,GAEI,KAAKD,KAFT,CAERC,OAFQ;AAGhBA,UAAAA,OAAO,GACFC,IADL,CACU,UAAChB,IAAD,EAAU;AACZ,YAAA,MAAI,CAACiB,QAAL,CAAc;AACVjB,cAAAA,IAAI,EAAJA;AADU,aAAd;AAGH,WALL;AAOH;AAdL;AAAA;AAAA,iCAeY;AAAA,cACIA,IADJ,GACa,KAAKW,KADlB,CACIX,IADJ;;AAEJ,cAAI,CAACA,IAAL,EAAW;AACP,mBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,iBAAO,oBAAC,IAAD,oBAAU,KAAKc,KAAf;AAAsB,YAAA,IAAI,EAAEd,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;AAtBL;;AAAA;AAAA,MAAqBL,SAArB;AAAA;AAwBH,CAzBD;;AA2BA,eAAec,QAAQ,CAACZ,QAAD,CAAvB","sourcesContent":["import React, { Component } from 'react';\nimport './itemList.css';\nimport Spinner from '../spinner'\n// import { arrayOf } from 'prop-types';\n function ItemList ({onItemSelected,renderItem,data}) {\n    function renderItems(arr) {\n        return arr.map((item,i) => {\n            const {id} = item\n            const label = renderItem(item)\n            return (\n            <li  key={id}  className=\"list-group-item\" onClick={() =>onItemSelected(id,item) } >\n                    {label}\n                </li>\n            )\n        })\n    }\n        const items = renderItems(data)\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n}   \nconst withData = (View)=>{\n    return class extends Component{\n        state = {\n            data: null,\n        }\n        componentDidMount() {\n            console.log(this.props)\n            const { getData } = this.props  \n            getData()\n                .then((data) => {\n                    this.setState({\n                        data\n                    })\n                })\n            \n        }\n        render(){\n            const { data } = this.state\n            if (!data) {\n                return <Spinner />\n            }\n            \n            return <View {...this.props} data={data}/>\n        }\n    }\n}\n\nexport default withData(ItemList)"]},"metadata":{},"sourceType":"module"}