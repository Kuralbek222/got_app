{"ast":null,"code":"import _classCallCheck from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/React/react-gotapp/src/components/randomChar/randomChar.js\";\nimport React, { Component } from 'react';\nimport './randomChar.css';\nimport gotServices from '../../Services';\nimport Spinner from '../spinner';\nimport ErrorMessage from '../ErrorMessage';\n\nvar RandomChar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RandomChar, _Component);\n\n  function RandomChar() {\n    var _this;\n\n    _classCallCheck(this, RandomChar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RandomChar).call(this));\n    _this.gotServices = new gotServices();\n    _this.state = {\n      char: {},\n      loading: true,\n      error: false\n    };\n\n    _this.updateChar = function () {\n      var id = Math.floor(Math.random() * 140 + 25); //25 - 140\n      // const id = 100000000000\n\n      _this.gotServices.getCharacter(id) // .then((res) => console.log(res.name))\n      .then(_this.onCharLoaded).catch(_this.onError);\n    };\n\n    _this.onError = function () {\n      _this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    _this.onCharLoaded = function (char) {\n      _this.setState({\n        char: char,\n        loading: false\n      });\n    };\n\n    _this.updateChar();\n\n    setInterval(_this.updateChar, 1500);\n    return _this;\n  }\n\n  _createClass(RandomChar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          char = _this$state.char,\n          loading = _this$state.loading,\n          error = _this$state.error;\n      var ErrMessage = error ? React.createElement(ErrorMessage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }) : null;\n      var spinner = loading ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }) : null;\n      var content = !(loading || error) ? React.createElement(View, {\n        char: char,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }) : null;\n      return React.createElement(\"div\", {\n        className: \"random-block rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, ErrMessage, content, spinner);\n    }\n  }]);\n\n  return RandomChar;\n}(Component);\n\nexport { RandomChar as default };\n\nvar View = function View(_ref) {\n  var char = _ref.char;\n  var name = char.name,\n      gender = char.gender,\n      born = char.born,\n      died = char.died,\n      culture = char.culture;\n  return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Random Character: \", name), React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Gender \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, gender)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Born \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, born)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Died \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, died)), React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Culture \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, culture))));\n};","map":{"version":3,"sources":["/root/React/react-gotapp/src/components/randomChar/randomChar.js"],"names":["React","Component","gotServices","Spinner","ErrorMessage","RandomChar","state","char","loading","error","updateChar","id","Math","floor","random","getCharacter","then","onCharLoaded","catch","onError","setState","setInterval","ErrMessage","spinner","content","View","name","gender","born","died","culture"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './randomChar.css';\nimport gotServices from '../../Services'\nimport Spinner from '../spinner'\nimport ErrorMessage from '../ErrorMessage'\n\nexport default class RandomChar extends Component {\n    constructor() {\n        super()\n        this.updateChar()\n        setInterval(this.updateChar, 1500)\n    }\n    gotServices = new gotServices()\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n    updateChar = () => {\n        const id = Math.floor(Math.random() * 140 + 25) //25 - 140\n        // const id = 100000000000\n        this.gotServices.getCharacter(id)\n            // .then((res) => console.log(res.name))\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    render() {\n\n        const { char, loading, error } = this.state\n\n        const ErrMessage = error ? <ErrorMessage /> : null\n\n        const spinner = loading ? <Spinner /> : null\n        const content = !(loading || error) ? <View char={char} /> : null\n\n\n        return (\n            <div className=\"random-block rounded\">\n                {ErrMessage}\n                {content}\n                {spinner}\n            </div>\n        );\n    }\n}\nconst View = ({ char }) => {\n    const { name, gender, born, died, culture } = char\n    return (\n        <>\n            <h4>Random Character: {name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Gender </span>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Born </span>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Died </span>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Culture </span>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}