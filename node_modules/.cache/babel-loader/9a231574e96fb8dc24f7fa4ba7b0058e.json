{"ast":null,"code":"import _classCallCheck from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/React/react-gotapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/React/react-gotapp/src/components/itemList/itemList.js\";\nimport React, { Component } from 'react';\nimport './itemList.css';\nimport Spinner from '../spinner'; // import { arrayOf } from 'prop-types';\n\nvar ItemList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ItemList, _Component);\n\n  function ItemList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ItemList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ItemList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      itemlist: null\n    };\n    return _this;\n  }\n\n  _createClass(ItemList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var getData = this.props.getData;\n      getData().then(function (itemlist) {\n        _this2.setState({\n          itemlist: itemlist\n        });\n      });\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems(arr) {\n      var _this3 = this;\n\n      return arr.map(function (item, i) {\n        var id = item.id;\n\n        var label = _this3.props.renderItems(item); //  this.props.onItemSelected(id,item)\n\n\n        return React.createElement(\"li\", {\n          key: id,\n          className: \"list-group-item\",\n          onClick: function onClick() {\n            return _this3.props.onItemSelected(id, item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, label);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var itemlist = this.state.itemlist;\n\n      if (!itemlist) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }\n\n      var items = this.renderItems(itemlist);\n      return React.createElement(\"ul\", {\n        className: \"item-list list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, items);\n    }\n  }]);\n\n  return ItemList;\n}(Component);\n\nItemList.defaultProps = {\n  onItemSelected: function onItemSelected() {}\n};\n\nvar f = function f() {\n  return (\n    /*#__PURE__*/\n    function (_Component2) {\n      _inherits(_class, _Component2);\n\n      function _class() {\n        _classCallCheck(this, _class);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n      }\n\n      _createClass(_class, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(ItemList, Object.assign({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }));\n        }\n      }]);\n\n      return _class;\n    }(Component)\n  );\n};\n\nexport default f();","map":{"version":3,"sources":["/root/React/react-gotapp/src/components/itemList/itemList.js"],"names":["React","Component","Spinner","ItemList","state","itemlist","getData","props","then","setState","arr","map","item","i","id","label","renderItems","onItemSelected","items","defaultProps","f"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CACA;;IACOC,Q;;;;;;;;;;;;;;;;;UAEHC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;;;;;wCAGY;AAAA;;AAAA,UACRC,OADQ,GACI,KAAKC,KADT,CACRD,OADQ;AAEhBA,MAAAA,OAAO,GACFE,IADL,CACU,UAACH,QAAD,EAAc;AAChB,QAAA,MAAI,CAACI,QAAL,CAAc;AACVJ,UAAAA,QAAQ,EAARA;AADU,SAAd;AAGH,OALL;AAOH;;;gCAGWK,G,EAAK;AAAA;;AACb,aAAOA,GAAG,CAACC,GAAJ,CAAQ,UAACC,IAAD,EAAMC,CAAN,EAAY;AAAA,YAChBC,EADgB,GACVF,IADU,CAChBE,EADgB;;AAEvB,YAAMC,KAAK,GAAG,MAAI,CAACR,KAAL,CAAWS,WAAX,CAAuBJ,IAAvB,CAAd,CAFuB,CAIzB;;;AACE,eACA;AAAK,UAAA,GAAG,EAAEE,EAAV;AAAe,UAAA,SAAS,EAAC,iBAAzB;AAA2C,UAAA,OAAO,EAAE;AAAA,mBAAK,MAAI,CAACP,KAAL,CAAWU,cAAX,CAA0BH,EAA1B,EAA6BF,IAA7B,CAAL;AAAA,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACSG,KADT,CADA;AAKH,OAVM,CAAP;AAWH;;;6BAEQ;AAAA,UACGV,QADH,GACgB,KAAKD,KADrB,CACGC,QADH;;AAEL,UAAI,CAACA,QAAL,EAAe;AACX,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,UAAMa,KAAK,GAAG,KAAKF,WAAL,CAAiBX,QAAjB,CAAd;AAEA,aACI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKa,KADL,CADJ;AAKH;;;;EA3CmBjB,S;;AA6CxBE,QAAQ,CAACgB,YAAT,GAAsB;AACtBF,EAAAA,cAAc,EAAC,0BAAI,CAAE;AADC,CAAtB;;AAGA,IAAMG,CAAC,GAAG,SAAJA,CAAI,GAAI;AACV;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCACY;AACJ,iBAAO,oBAAC,QAAD,oBAAc,KAAKb,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;AAHL;;AAAA;AAAA,MAAqBN,SAArB;AAAA;AAKH,CAND;;AAQA,eAAemB,CAAC,EAAhB","sourcesContent":["import React, { Component } from 'react';\nimport './itemList.css';\nimport Spinner from '../spinner'\n// import { arrayOf } from 'prop-types';\n class ItemList extends Component {\n    \n    state = {\n        itemlist: null,\n    }\n    componentDidMount() {\n        const { getData } = this.props  \n        getData()\n            .then((itemlist) => {\n                this.setState({\n                    itemlist\n                })\n            })\n        \n    }\n    \n\n    renderItems(arr) {\n        return arr.map((item,i) => {\n            const {id} = item\n            const label = this.props.renderItems(item)\n            \n          //  this.props.onItemSelected(id,item)\n            return (\n            <li  key={id}  className=\"list-group-item\" onClick={() =>this.props.onItemSelected(id,item) } >\n                    {label}\n                </li>\n            )\n        })\n    }\n\n    render() {\n        const { itemlist } = this.state\n        if (!itemlist) {\n            return <Spinner />\n        }\n        const items = this.renderItems(itemlist)\n\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n    }\n}\nItemList.defaultProps={\nonItemSelected:()=>{}\n}\nconst f = ()=>{\n    return class extends Component{\n        render(){\n            return <ItemList {...this.props}/>\n        }\n    }\n}\n\nexport default f()"]},"metadata":{},"sourceType":"module"}