{"version":3,"sources":["components/header/header.js","components/header/index.js","Services/index.js","Services/gotServices.js","components/spinner/index.js","components/spinner/spinner.js","components/ErrorMessage/index.js","components/ErrorMessage/ErrorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/index.js","components/itemList/itemList.js","components/charDetails/index.js","components/charDetails/charDetails.js","components/app/app.js","components/app/index.js","index.js"],"names":["HeaderBlock","styled","div","_templateObject","HeaderTitle","h3","_templateObject2","HeaderLinks","ul","_templateObject3","Header","react_default","a","createElement","href","gotServices","Object","classCallCheck","this","_apiBase","url","fetch","concat","res","ok","Error","status","json","getResources","map","_transFormCharacter","id","character","char","name","gender","born","died","culture","house","region","words","titles","overload","ancestralWeapons","book","numberOfPages","publisher","released","Spinner","className","ErrorMessage","src","alt","RandomChar","state","loading","error","updateChar","Math","floor","random","_this","getCharacter","then","onCharLoaded","catch","onError","setState","timerId","setInterval","clearInterval","console","log","_this$state","ErrMessage","components_ErrorMessage","spinner","components_spinner","content","randomChar_View","Component","View","_ref","Fragment","ItemList","charList","_this2","getAllCharacters","charlist","arr","_this3","item","i","key","onClick","props","onCharSelected","items","renderItems","CharDetails","prevProps","charId","foo","bar","_this$state$char","Button1","button","app_templateObject","Div1","app_templateObject2","App","possibleConstructorReturn","getPrototypeOf","call","selectorChar","show","prevstate","Random","newRandomChar","components_randomChar","Container","components_header","Row","Col","lg","size","offset","md","components_itemList","components_charDetails","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.aad1b279.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 80px;\n`;\n\nconst HeaderTitle = styled.h3`\n    font-size: 24px;\n    color: #fff;\n    margin: 0;\n`;\n\nconst HeaderLinks = styled.ul`\n    display: flex;\n    margin: 0;\n    align-items: center;\n    color: #fff;\n    list-style-type: none;\n    li {\n        margin-right: 20px;\n        font-size: 18px;\n    }\n`;\n\nconst Header = () => {\n    return (\n        <HeaderBlock>\n            <HeaderTitle>\n                <a href=\"#\">\n                Game of Thrones DB\n                </a>\n            </HeaderTitle>\n            <HeaderLinks>\n                <li>\n                    <a href=\"#\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"#\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"#\">Books</a>   \n                </li>\n            </HeaderLinks>\n        </HeaderBlock>\n    );\n};\n\nexport default Header;","import Header from './header';\n\nexport default Header;","import gotServices from './gotServices';\r\n\r\nexport default gotServices;","\r\nexport default class gotServices {\r\n\r\n    constructor() {\r\n        this._apiBase = 'https://www.anapioficeandfire.com/api'\r\n    }\r\n    async getResources(url) {\r\n        const res = await fetch(`${this._apiBase}${url}`)\r\n\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n        return await res.json()\r\n    }\r\n    async getAllCharacters() {\r\n        const res = await this.getResources('/characters?page=5&pageSize=10')\r\n\r\n        return res.map(this._transFormCharacter)\r\n    }\r\n    async getCharacter(id) {\r\n        const character = await this.getResources(`/characters/${id}`)\r\n        return this._transFormCharacter(character)\r\n    }\r\n    getAllHouses() {\r\n        return this.getResources(`/houses/`)\r\n    }\r\n    getHouse(id) {\r\n        return this.getResources(`/houses/${id}`)\r\n    }\r\n    getAllBooks(id) {\r\n        return this.getResources(`/books/`)\r\n    }\r\n    _transFormCharacter(char) {\r\n        return {\r\n            name: char.name,\r\n            gender: char.gender,\r\n            born: char.born,\r\n            died: char.died,\r\n            culture: char.culture\r\n        }\r\n    }\r\n    _transFormHouse(house) {\r\n        return {\r\n            name: house.name,\r\n            region: house.region,\r\n            words: house.words,\r\n            titles: house.titles,\r\n            overload: house.overload,\r\n            ancestralWeapons: house.ancestralWeapons\r\n        }\r\n    }\r\n    _transFormBooks(book) {\r\n        return {\r\n            name: book.name,\r\n            numberOfPages: book.numberOfPages,\r\n            publisher: book.publisher,\r\n            released: book.released\r\n        }\r\n    }\r\n}\r\n\r\n","import Spinner from './spinner'\r\nexport default Spinner","\r\nimport React from 'react'\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-spin-qpgnqj9lo98\"><div className=\"ldio-4sd32vevu9k\">\r\n            <div><div></div></div><div><div></div></div><div><div></div></div>\r\n            <div><div></div></div><div><div></div></div><div><div></div></div>\r\n            <div><div></div></div><div><div></div></div>\r\n        </div></div>\r\n    )\r\n}\r\nexport default Spinner\r\n\r\n","import ErrorMessage from './ErrorMessage'\r\nexport default ErrorMessage","import React from 'react'\r\nimport './errorMessage.css'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div>\r\n            <img src={process.env.PUBLIC_URL + '/img/Error.jpg'} alt='error'></img>\r\n            <span>Something wrong</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import React, { Component } from 'react';\nimport './randomChar.css';\nimport gotServices from '../../Services'\nimport Spinner from '../spinner'\nimport ErrorMessage from '../ErrorMessage'\n\nexport default class RandomChar extends Component {\n\n    gotServices = new gotServices()\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n    updateChar = () => {\n        const id = Math.floor(Math.random() * 140 + 25) //25 - 140\n        // const id = 100000000000\n        this.gotServices.getCharacter(id)\n            // .then((res) => console.log(res.name))\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n    componentDidMount() {\n        this.updateChar()\n        this.timerId = setInterval(this.updateChar, 3000)\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerId)\n    }\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    render() {\n        console.log('render')\n        const { char, loading, error } = this.state\n\n        const ErrMessage = error ? <ErrorMessage /> : null\n\n        const spinner = loading ? <Spinner /> : null\n        const content = !(loading || error) ? <View char={char} /> : null\n\n\n        return (\n            <div className=\"random-block rounded\">\n                {ErrMessage}\n                {content}\n                {spinner}\n            </div>\n        );\n    }\n}\nconst View = ({ char }) => {\n    const { name, gender, born, died, culture } = char\n    return (\n        <>\n            <h4>Random Character: {name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Gender </span>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Born </span>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Died </span>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Culture </span>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </>\n    )\n}\n","import RandomChar from './randomChar';\n\nexport default RandomChar;","import ItemList from './itemList';\n\nexport default ItemList;","import React, { Component } from 'react';\nimport './itemList.css';\nimport gotServices from '../../Services'\nimport Spinner from '../spinner'\nimport { arrayOf } from 'prop-types';\nexport default class ItemList extends Component {\n\n    gotServices = new gotServices()\n    state = {\n        charList: null,\n\n    }\n    componentDidMount() {\n        this.gotServices.getAllCharacters()\n            .then((charlist) => {\n                this.setState({\n                    charlist\n                })\n            })\n    }\n\n    renderItems(arr) {\n        return arr.map((item, i) => {\n            return (\n                <li key={i} className=\"list-group-item\" onClick={() => this.props.onCharSelected(41 + i)} >\n                    {item.name}\n                </li>\n            )\n        })\n    }\n\n    render() {\n        const { charlist } = this.state\n        if (!charlist) {\n            return <Spinner />\n        }\n        const items = this.renderItems(charlist)\n\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n    }\n}","import CharDetails from './charDetails';\nexport default CharDetails;","import React, { Component } from 'react';\nimport './charDetails.css';\nimport gotServices from '../../Services'\nexport default class CharDetails extends Component {\n\n    gotServices = new gotServices()\n\n    state = {\n        char: null\n    }\n    componentDidMount() {\n        this.updateChar()\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar()\n        }\n    }\n    updateChar() {\n        const { charId } = this.props\n        if (!charId) {\n            return\n        }\n        this.gotServices.getCharacter(charId)\n            .then((char) => {\n                this.setState({ char })\n            })\n        this.foo.bar = 0\n    }\n    render() {\n        if (!this.state.char) {\n            return <span className='select-error'>Please select a character</span>\n        }\n        const { name, gender, born, died, culture } = this.state.char\n\n        return (\n            <div className=\"char-details rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born</span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died</span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture</span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Col, Row, Container } from 'reactstrap';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport ItemList from '../itemList';\nimport CharDetails from '../charDetails';\nimport styled from 'styled-components'\nimport './button.css'\n\n// import gotServices from '../../Services'\nconst Button1 = styled.button`\nbackground-color: rgb(43, 97, 199);\nborder: none;\ncolor: white;\npadding: 2px 2px;\ntext-align: center;\ntext-decoration: none;\ndisplay: inline-block;\nwidth: 180px;\nfont-size: 30px;\n`;\nconst Div1 = styled.div`\npadding-bottom:20px\nwidth:200px`\n\n\n\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Random: true,\n            selectorChar: 130\n        }\n        this.name = 'hide'\n    }\n    onCharSelected = (id) => {\n        this.setState({\n            selectorChar: id\n        })\n    }\n\n    show = () => {\n        this.setState(prevstate => ({ Random: !prevstate.Random }))\n        if (this.state.Random) {\n            return this.name = 'show'\n        }\n        else {\n            return this.name = 'hide'\n        }\n\n    }\n\n\n    render() {\n        const newRandomChar = this.state.Random ? <RandomChar /> : null\n        const Butick = () => {\n\n            return (\n                <>\n                    <Div1>\n                        <Button1 onClick={this.show}>{this.name}</Button1>\n                    </Div1>\n                </>\n            )\n        }\n        return (\n            <>\n                <Container>\n                    <Header />\n                </Container>\n                <Container>\n                    <Row>\n                        <Col lg={{ size: 5, offset: 0 }}>\n                            {newRandomChar}\n                        </Col>\n                    </Row>\n                    <Butick onClick={this.state} />\n                    <Row>\n\n                        <Col md='6'>\n                            <ItemList onCharSelected={this.onCharSelected} />\n                        </Col>\n                        <Col md='6'>\n                            <CharDetails charId={this.state.selectorChar} />\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        );\n    };\n\n}","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}